---
description: 
globs: 
alwaysApply: true
---
# GameTime Bar Project Structure

This file explains the directory structure and key files in the GameTime Bar project.

## Directory Structure

```
GameTime Bar/
├── .cursor/           # Cursor editor rules and configuration
│   └── rules/         # Cursor-specific rules files
├── docs/              # Documentation files
├── games/             # Individual game directories (REQUIRED)
│   ├── snake/         # Snake game
│   ├── memory-match/  # Memory matching game
│   ├── tetris/        # Tetris game
│   ├── 2048/          # 2048 number puzzle
│   └── tic-tac-toe/   # Tic-tac-toe game
├── public/            # Static assets for production
├── src/               # Application source code
│   ├── components/    # Reusable UI components
│   ├── contexts/      # React context providers
│   ├── pages/         # Page components
│   ├── styles/        # Global styles
│   └── utils/         # Utility functions
├── node_modules/      # Dependencies (auto-generated)
├── index.html         # Main HTML file with GameTime Bar branding
├── package.json       # Project dependencies and scripts
├── vite.config.js     # Vite build configuration
└── wrangler.toml      # Cloudflare deployment configuration
```

## Key Directories

### Games Directory (CRITICAL)

The [games](mdc:games) directory contains individual game implementations. **ALL games MUST be placed here**.

Each game has its own folder with:

- `index.html`: The game implementation (REQUIRED)
- `meta.json`: Game metadata in English (REQUIRED)
- `image/`: Directory for game images (REQUIRED)
  - `cover.png`: Thumbnail image (REQUIRED)

Example: [games/snake](mdc:games/snake)

### Source Directory

The [src](mdc:src) directory contains the React application code:

- [components](mdc:src/components): Reusable UI components
  - [layout](mdc:src/components/layout): Layout components (Header, Sidebar, etc.)
  - [game](mdc:src/components/game): Game-related components (GameCard, etc.)
  - [theme](mdc:src/components/theme): Theme and UI components
  
- [contexts](mdc:src/contexts): React context providers
  - [GameContext.jsx](mdc:src/contexts/GameContext.jsx): Game data and filtering
  - [UserSettingsContext.jsx](mdc:src/contexts/UserSettingsContext.jsx): User preferences
  
- [pages](mdc:src/pages): Page components
  - [Home](mdc:src/pages/Home): Home page with game list
  - [GameDetail](mdc:src/pages/GameDetail): Game detail page
  - [Settings](mdc:src/pages/Settings): Settings page
  - [About](mdc:src/pages/About): About page
  - [NotFound](mdc:src/pages/NotFound): 404 error page
  
- [utils](mdc:src/utils): Utility functions
  - [gameLoader.js](mdc:src/utils/gameLoader.js): Game loading and filtering

- [styles](mdc:src/styles): Global styles and CSS modules

### Configuration Files

- [package.json](mdc:package.json): Project metadata, dependencies, and scripts
- [vite.config.js](mdc:vite.config.js): Vite build tool configuration
- [wrangler.toml](mdc:wrangler.toml): Cloudflare Pages deployment settings
- [.eslintrc.js](mdc:.eslintrc.js): ESLint code quality rules
- [.prettierrc](mdc:.prettierrc): Prettier code formatting rules

## Entry Points

- [index.html](mdc:index.html): Main HTML entry point with GameTime Bar branding
- [src/main.jsx](mdc:src/main.jsx): JavaScript application entry point
- [src/App.jsx](mdc:src/App.jsx): Main React application component

## Language Requirements

ALL content in the project structure must follow English-only requirements:
- Game names and descriptions in `meta.json` files
- UI component text and labels
- File and directory names should be descriptive in English


